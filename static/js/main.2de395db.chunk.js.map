{"version":3,"sources":["components/CircleAnimationButton-react/CircleAnimationButtonTemplate.js","components/CircleAnimationButton-react/CircleAnimationButtons.js","components/CircleAnimationButton-react/IconFA.js","components/InputFile.js","components/CircleAnimationButton-react/CircleAnimationButton.js","components/CellSign.js","components/RowSigns.js","components/TableWithSigns.js","data/consts.js","components/TestHeight.js","components/FlexContainer.js","views/Main.js","App.js","reportWebVitals.js","index.js"],"names":["styleTemplate","container","containerHover","circleContainer","textContainer","textContainerHover","text","textHover","CircleAnimationButtonTemplate","props","assignStyle","newStyle","style","Object","assign","mouseEnter","setState","hover","mouseLeave","alwaysVisibleText","isMobileDevice","test","navigator","userAgent","mainContainerStyle","height","width","backgroundColor","containerColor","borderRadius","cursor","webkitTapHighlightColor","display","alignItems","boxShadow","borderColor","transition","animationTime","fullStyle","mainContainerHoverStyle","circleContainerStyle","background","linearGradient","color","iconColor","textContainerStyle","overflow","textContainerHoverStyle","autoWidth","textStyle","visibility","margin","textAlign","verticalAlign","opacity","userSelect","textColor","whiteSpace","textHoverStyle","marginLeft","marginRight","direction","state","this","onMouseEnter","onMouseLeave","onClick","icon","React","Component","CircleAnimationButtonDark","IconFA","iconStyle","size","rotation","flip","pull","fixedWidth","inverse","listItem","spin","pulse","border","swapOpacity","className","transform","mask","symbol","InputFile","openFileInput","inputFileRef","current","click","createRef","buttonStyle","buttonFullStyle","type","accept","multiple","webkitdirectory","directory","undefined","mozdirectory","ref","onChange","styleColors","skyBlue","gradientColor","gray","coralBlue","deepSea","steelPurple","springForest","CircleAnimationButton","CellSign","fontFamily","fontSize","fontWeight","maxWidth","minWidth","maxHeight","minHeight","fontColor","fontSmooth","antialiasing","WebkitFontSmoothing","MozOsxFontSmoothing","WebkitTextStroke","textStroke","textStrokeSize","textStrokeColor","paintOrder","strokeFill","padding","cellRef","sign","RowSigns","getCells","cells","i","row","push","String","fromCharCode","TableWithSigns","getRows","signWidth","signHeight","charset","rows","divRef","borderSpacing","position","charsetOptions","value","label","TestHeight","getHeight","clientHeight","justifyContent","flexDirection","flexWrap","gap","marginTop","FlexContainer","children","Main","addFont","e","a","files","target","fontName","length","name","substr","arrayBuffer","data","replace","fontsList","document","fonts","delete","font","FontFace","load","add","createFontName","refreshFontList","forEach","family","getFontListOptions","list","options","clearAllAddedFonts","clear","getMinSignHeight","testSignRef","download","toPng","cacheBust","skipAutoScale","pixelRatio","quality","then","dataUrl","link","createElement","fontImageName","href","catch","err","console","log","generateOtfontFile","otfontFileName","spaceWidth","window","btoa","unescape","encodeURIComponent","textContent","setTimeout","fontFileName","fontImageNameChanged","otfontFileNameChanged","resetFontImageNameChanged","resetOtfontFileNameChanged","openAdditionalOptions","additionalOptions","closeAdditionalOptions","onChangeFont","onChangeFontSize","Number","signHeightError","onChangeSignWidth","onChangeSignHeight","onChangeFontWeight","onChangeCharset","onChangeSpaceWidth","onChangeFontImageName","onChangeOtfontFileName","onChangeFontColor","onChangeAntialiasing","checked","onChangeTextStroke","onChangeTextStrokeSize","onChangeTextStrokeColor","onChangeStrokeFill","faFileUpload","faFolderPlus","faBroom","styles","provided","option","control","indicatorsContainer","min","step","max","faMagic","faTools","faTimesCircle","defaultChecked","faFileImage","marginBottom","faFileCode","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2de395db.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst styleTemplate = {\r\n    container: {},\r\n    containerHover: {},\r\n    circleContainer: {},\r\n    textContainer: {},\r\n    textContainerHover: {},\r\n    text: {},\r\n    textHover: {}\r\n}\r\n\r\nclass CircleAnimationButtonTemplate extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.fullStyle = this.assignStyle(this.props.fullStyle);\r\n        this.alwaysVisibleText = this.isMobileDevice() || this.props.alwaysVisibleText;\r\n\r\n        this.height = this.props.height ? this.props.height : 35;\r\n        this.width = this.props.autoWidth ? 'max-content' : this.props.width ? this.props.width : 105;\r\n        this.borderColor = this.props.borderColor ? this.props.borderColor : \"#787875\";\r\n        this.containerColor = this.props.containerColor ? this.props.containerColor : \"#424241\";\r\n        this.animationTime = this.props.animationTime ? this.props.animationTime : 1;\r\n        this.linearGradient = this.props.linearGradient ? this.props.linearGradient : \"0deg, #424241, #333332\";\r\n        this.iconColor = this.props.iconColor ? this.props.iconColor : \"#FFFFFF\";\r\n        this.textColor = this.props.textColor ? this.props.textColor : \"#FFFFFF\";\r\n        this.direction = this.props.direction === \"left\" ? 1 : 0;\r\n\r\n        this.state = {\r\n            hover: this.alwaysVisibleText ? true : false\r\n        };\r\n    }\r\n\r\n    assignStyle = (newStyle) => {\r\n        let style = Object.assign({}, styleTemplate);\r\n        Object.assign(style, newStyle);\r\n\r\n        return style;\r\n    }\r\n\r\n    mouseEnter = () => {\r\n        this.setState({ hover: true });\r\n    }\r\n\r\n    mouseLeave = () => {\r\n        //Off hide text when mobile device\r\n        if (this.alwaysVisibleText) {\r\n            return;\r\n        }\r\n\r\n        this.setState({ hover: false });\r\n    }\r\n\r\n    isMobileDevice = () => {\r\n        return /Android|webOS|iPhone|iPad|iPod/i.test(navigator.userAgent) ? true : false;\r\n    }\r\n\r\n    mainContainerStyle = () => {\r\n        let style = {\r\n            height: this.height,\r\n            width: this.height,\r\n            backgroundColor: this.containerColor,\r\n            borderRadius: this.height,\r\n            cursor: 'pointer',\r\n            webkitTapHighlightColor: 'transparent',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            boxShadow: '0px 0px 0px 1px ' + this.borderColor,\r\n            transition: \"width \" + this.animationTime + \"s\"\r\n        }\r\n\r\n        style = { ...style, ...this.fullStyle['container'] };\r\n\r\n        if (this.props.style) {\r\n            style = { ...style, ...this.props.style }\r\n        }\r\n\r\n        return style;\r\n    }\r\n\r\n    mainContainerHoverStyle = () => {\r\n        let style = {\r\n            height: this.height,\r\n            width: this.width,\r\n            backgroundColor: this.containerColor,\r\n            borderRadius: this.height,\r\n            cursor: 'pointer',\r\n            webkitTapHighlightColor: 'transparent',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            boxShadow: '0px 0px 0px 1px ' + this.borderColor,\r\n            transition: \"width \" + this.animationTime + \"s\"\r\n        }\r\n\r\n        style = { ...style, ...this.fullStyle['containerHover'] };\r\n\r\n        if (this.props.style) {\r\n            style = { ...style, ...this.props.style }\r\n        }\r\n\r\n        return style;\r\n    }\r\n\r\n    circleContainerStyle = () => {\r\n        let style = {\r\n            height: this.height,\r\n            width: this.height,\r\n            background: 'linear-gradient(' + this.linearGradient + ')',\r\n            borderRadius: this.height,\r\n            alignItems: 'center',\r\n            display: 'flex',\r\n            boxShadow: '0px 0px 0px 2px ' + this.borderColor,\r\n            color: this.iconColor\r\n        }\r\n\r\n        style = { ...style, ...this.fullStyle['circleContainer'] };\r\n\r\n        return style;\r\n    }\r\n\r\n    textContainerStyle = () => {\r\n        let style = {\r\n            display: 'flex',\r\n            overflow: 'hidden',\r\n            height: this.height,\r\n            width: 0,\r\n            transition: \"width \" + this.animationTime + \"s\"\r\n        }\r\n\r\n        style = { ...style, ...this.fullStyle['textContainer'] };\r\n\r\n        return style;\r\n    }\r\n\r\n    textContainerHoverStyle = () => {\r\n        let style = {\r\n            display: 'flex',\r\n            overflow: 'hidden',\r\n            height: this.height,\r\n            width: this.props.autoWidth ? 'calc(100% - ' + this.height + 'px)' : this.width - this.height,\r\n            transition: \"width \" + this.animationTime + \"s\"\r\n        }\r\n\r\n        style = { ...style, ...this.fullStyle['textContainerHover'] };\r\n\r\n        return style;\r\n    }\r\n\r\n    textStyle = () => {\r\n        let style = {\r\n            visibility: 'hidden',\r\n            margin: 'auto',\r\n            textAlign: 'center',\r\n            verticalAlign: 'middle',\r\n            opacity: 0,\r\n            userSelect: 'none',\r\n            color: this.textColor,\r\n            whiteSpace: 'nowrap',\r\n            transition: \"visibility \" + this.animationTime / 2 + \"s, opacity \" + this.animationTime / 2 + \"s\"\r\n        }\r\n\r\n        if (this.props.autoWidth) {\r\n            style = { ...style, ...{ transition: \"opacity 0s\" } }\r\n        }\r\n\r\n        style = { ...style, ...this.fullStyle['text'] };\r\n\r\n        return style;\r\n    }\r\n\r\n    textHoverStyle = () => {\r\n        let style = {\r\n            visibility: 'visible',\r\n            margin: 'auto',\r\n            textAlign: 'center',\r\n            verticalAlign: 'middle',\r\n            opacity: 1.0,\r\n            userSelect: 'none',\r\n            color: this.textColor,\r\n            whiteSpace: 'nowrap',\r\n            transition: \"visibility 0s, opacity \" + this.animationTime * 2 + \"s\"\r\n        }\r\n\r\n        if (this.props.autoWidth) {\r\n            style = { ...style, ...{ marginLeft: 10, marginRight: 10 } }\r\n        }\r\n\r\n        style = { ...style, ...this.fullStyle['textHover'] };\r\n\r\n        return style;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                style={ !this.state.hover ? this.mainContainerStyle() : this.mainContainerHoverStyle() }\r\n                onMouseEnter={ this.mouseEnter }\r\n                onMouseLeave={ this.mouseLeave }\r\n                onClick={ this.props.onClick }\r\n            >\r\n                { this.direction === 1 ?\r\n                <div style={ !this.state.hover ? this.textContainerStyle() : this.textContainerHoverStyle() }>\r\n                    <div style={ !this.state.hover ? this.textStyle() : this.textHoverStyle() }>{ this.props.text }</div>\r\n                </div>\r\n                : null }\r\n                <div style={ this.circleContainerStyle() }>\r\n                    { this.props.icon }\r\n                </div>\r\n                { this.direction === 0 ?\r\n                <div style={ !this.state.hover ? this.textContainerStyle() : this.textContainerHoverStyle() }>\r\n                    <div\r\n                        style={ !this.state.hover ? this.textStyle() : this.textHoverStyle() }\r\n                        onMouseEnter={ null }\r\n                        onMouseLeave={ null }\r\n                    >{ this.props.text }</div>\r\n                </div>\r\n                : null }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CircleAnimationButtonTemplate;\r\n","import React from 'react';\r\n\r\nimport CircleAnimationButtonTemplate from './CircleAnimationButtonTemplate';\r\n\r\nexport class CircleAnimationButtonDanger extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.height = this.props.height ? this.props.height : 35;\r\n        this.width = this.props.width ? this.props.width : 105;\r\n        this.borderColor = this.props.borderColor ? this.props.borderColor : \"#6B1515\";\r\n        this.containerColor = this.props.containerColor ? this.props.containerColor : \"#FF3333\";\r\n        this.animationTime = this.props.animationTime ? this.props.animationTime : 1;\r\n        this.linearGradient = this.props.linearGradient ? this.props.linearGradient : \"0deg, #FF3333, #D12A2A\";\r\n        this.iconColor = this.props.iconColor ? this.props.iconColor : \"#000000\";\r\n        this.textColor = this.props.textColor ? this.props.textColor : \"#000000\";\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <CircleAnimationButtonTemplate\r\n                height={ this.height }\r\n                width={ this.width }\r\n                borderColor={ this.borderColor }\r\n                containerColor={ this.containerColor }\r\n                animationTime={ this.animationTime }\r\n                linearGradient={ this.linearGradient }\r\n                iconColor={ this.iconColor }\r\n                textColor={ this.textColor }\r\n                direction={ this.props.direction }\r\n                alwaysVisibleText={ this.props.alwaysVisibleText }\r\n                autoWidth={ this.props.autoWidth }\r\n                style={ this.props.style }\r\n                fullStyle={ this.props.fullStyle }\r\n                icon={ this.props.icon }\r\n                text={ this.props.text }\r\n                onClick={ this.props.onClick }\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport class CircleAnimationButtonSuccess extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.height = this.props.height ? this.props.height : 35;\r\n        this.width = this.props.width ? this.props.width : 105;\r\n        this.borderColor = this.props.borderColor ? this.props.borderColor : \"#236B20\";\r\n        this.containerColor = this.props.containerColor ? this.props.containerColor : \"#50F74A\";\r\n        this.animationTime = this.props.animationTime ? this.props.animationTime : 1;\r\n        this.linearGradient = this.props.linearGradient ? this.props.linearGradient : \"0deg, #50F74A, #44D13F\";\r\n        this.iconColor = this.props.iconColor ? this.props.iconColor : \"#000000\";\r\n        this.textColor = this.props.textColor ? this.props.textColor : \"#000000\";\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <CircleAnimationButtonTemplate\r\n                height={ this.height }\r\n                width={ this.width }\r\n                borderColor={ this.borderColor }\r\n                containerColor={ this.containerColor }\r\n                animationTime={ this.animationTime }\r\n                linearGradient={ this.linearGradient }\r\n                iconColor={ this.iconColor }\r\n                textColor={ this.textColor }\r\n                direction={ this.props.direction }\r\n                alwaysVisibleText={ this.props.alwaysVisibleText }\r\n                autoWidth={ this.props.autoWidth }\r\n                style={ this.props.style }\r\n                fullStyle={ this.props.fullStyle }\r\n                icon={ this.props.icon }\r\n                text={ this.props.text }\r\n                onClick={ this.props.onClick }\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport class CircleAnimationButtonWarning extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.height = this.props.height ? this.props.height : 35;\r\n        this.width = this.props.width ? this.props.width : 105;\r\n        this.borderColor = this.props.borderColor ? this.props.borderColor : \"#6B6B17\";\r\n        this.containerColor = this.props.containerColor ? this.props.containerColor : \"#F7F734\";\r\n        this.animationTime = this.props.animationTime ? this.props.animationTime : 1;\r\n        this.linearGradient = this.props.linearGradient ? this.props.linearGradient : \"0deg, #F7F734, #D1D12C\";\r\n        this.iconColor = this.props.iconColor ? this.props.iconColor : \"#000000\";\r\n        this.textColor = this.props.textColor ? this.props.textColor : \"#000000\";\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <CircleAnimationButtonTemplate\r\n                height={ this.height }\r\n                width={ this.width }\r\n                borderColor={ this.borderColor }\r\n                containerColor={ this.containerColor }\r\n                animationTime={ this.animationTime }\r\n                linearGradient={ this.linearGradient }\r\n                iconColor={ this.iconColor }\r\n                textColor={ this.textColor }\r\n                direction={ this.props.direction }\r\n                alwaysVisibleText={ this.props.alwaysVisibleText }\r\n                autoWidth={ this.props.autoWidth }\r\n                style={ this.props.style }\r\n                fullStyle={ this.props.fullStyle }\r\n                icon={ this.props.icon }\r\n                text={ this.props.text }\r\n                onClick={ this.props.onClick }\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport class CircleAnimationButtonPrimary extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.height = this.props.height ? this.props.height : 35;\r\n        this.width = this.props.width ? this.props.width : 105;\r\n        this.borderColor = this.props.borderColor ? this.props.borderColor : \"#25446B\";\r\n        this.containerColor = this.props.containerColor ? this.props.containerColor : \"#579FF7\";\r\n        this.animationTime = this.props.animationTime ? this.props.animationTime : 1;\r\n        this.linearGradient = this.props.linearGradient ? this.props.linearGradient : \"0deg, #579FF7, #4986D1\";\r\n        this.iconColor = this.props.iconColor ? this.props.iconColor : \"#000000\";\r\n        this.textColor = this.props.textColor ? this.props.textColor : \"#000000\";\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <CircleAnimationButtonTemplate\r\n                height={ this.height }\r\n                width={ this.width }\r\n                borderColor={ this.borderColor }\r\n                containerColor={ this.containerColor }\r\n                animationTime={ this.animationTime }\r\n                linearGradient={ this.linearGradient }\r\n                iconColor={ this.iconColor }\r\n                textColor={ this.textColor }\r\n                direction={ this.props.direction }\r\n                alwaysVisibleText={ this.props.alwaysVisibleText }\r\n                autoWidth={ this.props.autoWidth }\r\n                style={ this.props.style }\r\n                fullStyle={ this.props.fullStyle }\r\n                icon={ this.props.icon }\r\n                text={ this.props.text }\r\n                onClick={ this.props.onClick }\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport class CircleAnimationButtonDark extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.height = this.props.height ? this.props.height : 35;\r\n        this.width = this.props.width ? this.props.width : 105;\r\n        this.borderColor = this.props.borderColor ? this.props.borderColor : \"#787875\";\r\n        this.containerColor = this.props.containerColor ? this.props.containerColor : \"#424241\";\r\n        this.animationTime = this.props.animationTime ? this.props.animationTime : 1;\r\n        this.linearGradient = this.props.linearGradient ? this.props.linearGradient : \"0deg, #424241, #333332\";\r\n        this.iconColor = this.props.iconColor ? this.props.iconColor : \"#FFFFFF\";\r\n        this.textColor = this.props.textColor ? this.props.textColor : \"#FFFFFF\";\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <CircleAnimationButtonTemplate\r\n                height={ this.height }\r\n                width={ this.width }\r\n                borderColor={ this.borderColor }\r\n                containerColor={ this.containerColor }\r\n                animationTime={ this.animationTime }\r\n                linearGradient={ this.linearGradient }\r\n                iconColor={ this.iconColor }\r\n                textColor={ this.textColor }\r\n                direction={ this.props.direction }\r\n                alwaysVisibleText={ this.props.alwaysVisibleText }\r\n                autoWidth={ this.props.autoWidth }\r\n                style={ this.props.style }\r\n                fullStyle={ this.props.fullStyle }\r\n                icon={ this.props.icon }\r\n                text={ this.props.text }\r\n                onClick={ this.props.onClick }\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport class CircleAnimationButtonLight extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.height = this.props.height ? this.props.height : 35;\r\n        this.width = this.props.width ? this.props.width : 105;\r\n        this.borderColor = this.props.borderColor ? this.props.borderColor : \"#474746\";\r\n        this.containerColor = this.props.containerColor ? this.props.containerColor : \"#DEDED9\";\r\n        this.animationTime = this.props.animationTime ? this.props.animationTime : 1;\r\n        this.linearGradient = this.props.linearGradient ? this.props.linearGradient : \"0deg, #DEDED9, #ADADAA\";\r\n        this.iconColor = this.props.iconColor ? this.props.iconColor : \"#000000\";\r\n        this.textColor = this.props.textColor ? this.props.textColor : \"#000000\";\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <CircleAnimationButtonTemplate\r\n                height={ this.height }\r\n                width={ this.width }\r\n                borderColor={ this.borderColor }\r\n                containerColor={ this.containerColor }\r\n                animationTime={ this.animationTime }\r\n                linearGradient={ this.linearGradient }\r\n                iconColor={ this.iconColor }\r\n                textColor={ this.textColor }\r\n                direction={ this.props.direction }\r\n                alwaysVisibleText={ this.props.alwaysVisibleText }\r\n                autoWidth={ this.props.autoWidth }\r\n                style={ this.props.style }\r\n                fullStyle={ this.props.fullStyle }\r\n                icon={ this.props.icon }\r\n                text={ this.props.text }\r\n                onClick={ this.props.onClick }\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport class CircleAnimationButtonInfo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.height = this.props.height ? this.props.height : 35;\r\n        this.width = this.props.width ? this.props.width : 105;\r\n        this.borderColor = this.props.borderColor ? this.props.borderColor : \"#22444D\";\r\n        this.containerColor = this.props.containerColor ? this.props.containerColor : \"#64CAE3\";\r\n        this.animationTime = this.props.animationTime ? this.props.animationTime : 1;\r\n        this.linearGradient = this.props.linearGradient ? this.props.linearGradient : \"0deg, #64CAE3, #4F9FB3\";\r\n        this.iconColor = this.props.iconColor ? this.props.iconColor : \"#000000\";\r\n        this.textColor = this.props.textColor ? this.props.textColor : \"#000000\";\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <CircleAnimationButtonTemplate\r\n                height={ this.height }\r\n                width={ this.width }\r\n                borderColor={ this.borderColor }\r\n                containerColor={ this.containerColor }\r\n                animationTime={ this.animationTime }\r\n                linearGradient={ this.linearGradient }\r\n                iconColor={ this.iconColor }\r\n                textColor={ this.textColor }\r\n                direction={ this.props.direction }\r\n                alwaysVisibleText={ this.props.alwaysVisibleText }\r\n                autoWidth={ this.props.autoWidth }\r\n                style={ this.props.style }\r\n                fullStyle={ this.props.fullStyle }\r\n                icon={ this.props.icon }\r\n                text={ this.props.text }\r\n                onClick={ this.props.onClick }\r\n            />\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nclass IconFA extends React.Component {\r\n    iconStyle = () => {\r\n        let style = {\r\n            margin: 'auto'\r\n        }\r\n\r\n        style = { ...style, ...this.props.style };\r\n\r\n        return style;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <FontAwesomeIcon\r\n                style={ this.iconStyle() }\r\n                icon={ this.props.icon }\r\n                size={ this.props.size }\r\n                rotation={ this.props.rotation }\r\n                flip={ this.props.flip }\r\n                pull={ this.props.pull }\r\n                fixedWidth={ this.props.fixedWidth }\r\n                inverse={ this.props.inverse }\r\n                listItem={ this.props.listItem }\r\n                spin={ this.props.spin }\r\n                pulse={ this.props.pulse }\r\n                border={ this.props.border }\r\n                swapOpacity={ this.props.swapOpacity }\r\n                className={ this.props.className }\r\n                transform={ this.props.transform }\r\n                mask={ this.props.mask }\r\n                color={ this.props.color }\r\n                symbol={ this.props.symbol }\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default IconFA;\r\n","import React from 'react';\n\nimport { CircleAnimationButtonDark } from '../components/CircleAnimationButton-react/CircleAnimationButtons';\nimport IconFA from '../components/CircleAnimationButton-react/IconFA';\n\n/**\n * @param {Array} style Set style for main container\n * @param {string} accept Define the types of files that the control can select [.txt]\n * @param {function} onChange Set onChange action\n * @param {string} text Set button text ['Hello']\n * @param {ObjectFortawesome} icon Set Fortawesome icon object [faFileImage]\n * @param {boolean} autoWidth Set auto width, this action prevent animation (css don't work with auto size), recommended when use alwaysVisibleText={ true }\n * @param {number} animationTime Animation speed (seconds) [5]\n * @param {colorString} iconColor Button icon color ['#000']\n * @param {colorString} textColor Button text color ['#fff']\n * @param {string} direction Button text expanded direction ['right' / 'left']\n * @param {number} height Set button height [100]\n * @param {number} width Set button width [50]\n * @param {Array} buttonStyle Set style for button main container\n * @param {Array} buttonFullStyle Set full button styling\n */\nclass InputFile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.inputFileRef = React.createRef();\n\n        this.state = {};\n    }\n\n    openFileInput = () => {\n        this.inputFileRef.current.click();\n    }\n\n    render() {\n        return (\n            <div style={ this.props.style }>\n                <CircleAnimationButtonDark\n                    text={ this.props.text }\n                    icon={ <IconFA icon={ this.props.icon } /> }\n                    width={ this.props.width }\n                    height={ this.props.height }\n                    autoWidth={ this.props.autoWidth }\n                    animationTime={ this.props.animationTime }\n                    iconColor={ this.props.iconColor }\n                    textColor={ this.props.textColor }\n                    direction={ this.props.direction }\n                    alwaysVisibleText={ this.props.alwaysVisibleText }\n                    style={ this.props.buttonStyle }\n                    fullStyle={ this.props.buttonFullStyle }\n                    onClick={ this.openFileInput }\n                />\n                <input\n                    type={ \"file\" }\n                    accept={ this.props.accept }\n                    multiple={ this.props.multiple }\n                    webkitdirectory={ this.props.directory ? \"\" : undefined }\n                    mozdirectory={ this.props.directory ? \"\" : undefined }\n                    directory={ this.props.directory ? \"\" : undefined }\n                    ref={ this.inputFileRef }\n                    onChange={ this.props.onChange }\n                    style={{ display: 'none' }}\n                ></input>\n            </div>\n        );\n    }\n}\n\nexport default InputFile;\n","import React from 'react';\r\n\r\nimport CircleAnimationButtonTemplate from './CircleAnimationButtonTemplate';\r\n\r\nconst styleColors = {\r\n    skyBlue: {\r\n        borderColor: \"#385D6B\",\r\n        containerColor: \"#81D6F7\",\r\n        gradientColor: \"#6DB5D1\",\r\n        textColor: \"#000000\"\r\n    },\r\n    gray: {\r\n        borderColor: \"#6B6B6B\",\r\n        containerColor: \"#818181\",\r\n        gradientColor: \"#D1D1D1\",\r\n        textColor: \"#000000\"\r\n    },\r\n    coralBlue: {\r\n        borderColor: \"#15406B\",\r\n        containerColor: \"#2A7DD1\",\r\n        gradientColor: \"#3399FF\",\r\n        textColor: \"#000000\"\r\n    },\r\n    deepSea: {\r\n        borderColor: \"#013D6B\",\r\n        containerColor: \"#01579B\",\r\n        gradientColor: \"#0277D1\",\r\n        textColor: \"#FFFFFF\"\r\n    },\r\n    steelPurple: {\r\n        borderColor: \"#50506B\",\r\n        containerColor: \"#9999CC\",\r\n        gradientColor: \"#9D9DD1\",\r\n        textColor: \"#000000\"\r\n    },\r\n    springForest: {\r\n        borderColor: \"#2D6B30\",\r\n        containerColor: \"#43A047\",\r\n        gradientColor: \"#58D15E\",\r\n        textColor: \"#000000\"\r\n    }\r\n}\r\n\r\nexport class CircleAnimationButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.color = this.props.color ? this.props.color : \"skyBlue\";\r\n\r\n        this.height = this.props.height ? this.props.height : 35;\r\n        this.width = this.props.width ? this.props.width : 105;\r\n        this.borderColor = this.props.borderColor ? this.props.borderColor : styleColors[this.color].borderColor;\r\n        this.containerColor = this.props.containerColor ? this.props.containerColor : styleColors[this.color].containerColor;\r\n        this.animationTime = this.props.animationTime ? this.props.animationTime : 1;\r\n        this.linearGradient = this.props.linearGradient ? this.props.linearGradient : \"0deg, \" + styleColors[this.color].containerColor + \", \" + styleColors[this.color].gradientColor;\r\n        this.iconColor = this.props.iconColor ? this.props.iconColor : styleColors[this.color].textColor;\r\n        this.textColor = this.props.textColor ? this.props.textColor : styleColors[this.color].textColor;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <CircleAnimationButtonTemplate\r\n                height={ this.height }\r\n                width={ this.width }\r\n                borderColor={ this.borderColor }\r\n                containerColor={ this.containerColor }\r\n                animationTime={ this.animationTime }\r\n                linearGradient={ this.linearGradient }\r\n                iconColor={ this.iconColor }\r\n                textColor={ this.textColor }\r\n                direction={ this.props.direction }\r\n                alwaysVisibleText={ this.props.alwaysVisibleText }\r\n                autoWidth={ this.props.autoWidth }\r\n                style={ this.props.style }\r\n                fullStyle={ this.props.fullStyle }\r\n                icon={ this.props.icon }\r\n                text={ this.props.text }\r\n                onClick={ this.props.onClick }\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default CircleAnimationButton;\r\n","import React from 'react';\n\nclass CellSign extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {}\n    }\n\n    render() {\n        return (\n            <div\n                style={{ ...{\n                    fontFamily: this.props.fontFamily ? this.props.fontFamily : null,\n                    fontSize: this.props.fontSize,\n                    fontWeight: this.props.fontWeight,\n                    display: \"table-cell\",\n                    width: this.props.width,\n                    maxWidth: this.props.width,\n                    minWidth: this.props.width,\n                    height: this.props.height,\n                    maxHeight: this.props.height,\n                    minHeight: this.props.height,\n                    color: this.props.fontColor,\n                    fontSmooth: this.props.antialiasing ? \"always\" : \"never\",\n                    WebkitFontSmoothing: this.props.antialiasing ? \"antialiased\" : \"none\",\n                    MozOsxFontSmoothing: this.props.antialiasing ? \"grayscale\" : null,\n                    WebkitTextStroke: this.props.textStroke ? this.props.textStrokeSize + 'px ' + this.props.textStrokeColor : 'unset',\n                    textStroke: this.props.textStroke ? this.props.textStrokeSize + 'px ' + this.props.textStrokeColor  : 'unset',\n                    paintOrder: this.props.strokeFill ? \"stroke fill\" : null,\n                    textAlign: \"left\",\n                    verticalAlign: \"initial\",\n                    margin: 0,\n                    padding: 0,\n                    border: 0,\n                    overflow: \"hidden\"\n                    }, ...this.props.style }\n                }\n                ref={ this.props.cellRef }\n            >\n                { this.props.sign }\n            </div>\n        );\n    }\n}\n\nexport default CellSign;\n","import React from 'react';\n\nimport CellSign from './CellSign';\n\nclass RowSigns extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {}\n    }\n\n    getCells = (fontFamily, fontSize, fontWeight, fontColor, antialiasing, textStroke, textStrokeSize, textStrokeColor, strokeFill) => {\n        let cells = [];\n\n        for (let i in this.props.row) {\n            cells.push(\n                <CellSign\n                    key={ i }\n                    sign={ String.fromCharCode(this.props.row[i]) }\n                    width={ this.props.width }\n                    height={ this.props.height }\n                    fontFamily={ fontFamily }\n                    fontSize={ fontSize }\n                    fontWeight={ fontWeight }\n                    fontColor={ fontColor }\n                    antialiasing={ antialiasing }\n                    textStroke={ textStroke }\n                    textStrokeSize={ textStrokeSize }\n                    textStrokeColor={ textStrokeColor }\n                    strokeFill={ strokeFill }\n                />\n            );\n        }\n\n        return cells;\n    }\n\n    render() {\n        return (\n            <div style={{\n                display: \"table-row\",\n                height: this.props.height,\n                maxHeight: this.props.height,\n                minHeight: this.props.height,\n                margin: 0,\n                padding: 0,\n                border: 0,\n                overflow: \"hidden\"\n            }}>\n                { this.getCells(this.props.fontFamily, this.props.fontSize, this.props.fontWeight, this.props.fontColor, this.props.antialiasing, this.props.textStroke, this.props.textStrokeSize, this.props.textStrokeColor, this.props.strokeFill) }\n            </div>\n        );\n    }\n}\n\nexport default RowSigns;\n","import React from 'react';\n\nimport RowSigns from './RowSigns';\n\nclass TableWithSigns extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {}\n    }\n\n    getRows = (fontFamily, fontSize, signWidth, signHeight, fontWeight, charset, fontColor, antialiasing, textStroke, textStrokeSize, textStrokeColor, strokeFill) => {\n        let rows = [];\n\n        for(let i in charset) {\n            rows.push(\n                <RowSigns\n                    key={ i }\n                    row={ charset[i] }\n                    width={ signWidth }\n                    height={ signHeight }\n                    fontFamily={ fontFamily }\n                    fontSize={ fontSize }\n                    fontWeight={ fontWeight }\n                    fontColor={ fontColor }\n                    antialiasing={ antialiasing }\n                    textStroke={ textStroke }\n                    textStrokeSize={ textStrokeSize }\n                    textStrokeColor={ textStrokeColor }\n                    strokeFill={ strokeFill }\n                />\n            );\n        }\n\n        return rows;\n    }\n\n    render() {\n        return (\n            <div ref={ this.props.divRef } style={{ display: \"table\", borderSpacing: 0, position: \"relative\" }}>\n                { this.getRows(this.props.fontFamily, this.props.fontSize, this.props.signWidth, this.props.signHeight, this.props.fontWeight, this.props.charset, this.props.fontColor, this.props.antialiasing, this.props.textStroke, this.props.textStrokeSize, this.props.textStrokeColor, this.props.strokeFill) }\n            </div>\n        );\n    }\n}\n\nexport default TableWithSigns;\n","const cp1252 = [\n    [  32,   33,   34,   35,   36,   37,   38,   39,   40,   41,   42,   43,   44,   45,   46,   47],\n    [  48,   49,   50,   51,   52,   53,   54,   55,   56,   57,   58,   59,   60,   61,   62,   63],\n    [  64,   65,   66,   67,   68,   69,   70,   71,   72,   73,   74,   75,   76,   77,   78,   79],\n    [  80,   81,   82,   83,   84,   85,   86,   87,   88,   89,   90,   91,   92,   93,   94,   95],\n    [  96,   97,   98,   99,  100,  101,  102,  103,  104,  105,  106,  107,  108,  109,  110,  111],\n    [ 112,  113,  114,  115,  116,  117,  118,  119,  120,  121,  122,  123,  124,  125,  126, 9633],\n    [8364, 9633, 8218,  402, 8222, 8230, 8224,  225,  710, 8240,  352, 8249,  338, 9633,  381, 9633],\n    [9633, 8216, 8217, 8220, 8221, 8226, 8211, 8212,  732, 8482,  353, 8250,  339, 9633,  382,  376],\n    [  32,  161,  162,  163,  164,  165,  166,  167,  168,  169,  170,  171,  172,   32,  174,  175],\n    [ 176,  177,  178,  179,  180,  181,  182,  183,  184,  185,  186,  187,  188,  189,  190,  191],\n    [ 192,  193,  194,  195,  196,  197,  198,  199,  200,  201,  202,  203,  204,  205,  206,  207],\n    [ 208,  209,  210,  211,  212,  213,  214,  215,  216,  217,  218,  219,  220,  221,  222,  223],\n    [ 224,  225,  226,  227,  228,  229,  230,  231,  232,  233,  234,  235,  236,  237,  238,  239],\n    [ 240,  241,  242,  243,  244,  245,  246,  247,  248,  249,  250,  251,  252,  253,  254,  255]\n];\n\nconst cp1250 = [\n    [  32,   33,   34,   35,   36,   37,   38,   39,   40,   41,   42,   43,   44,   45,   46,   47],\n    [  48,   49,   50,   51,   52,   53,   54,   55,   56,   57,   58,   59,   60,   61,   62,   63],\n    [  64,   65,   66,   67,   68,   69,   70,   71,   72,   73,   74,   75,   76,   77,   78,   79],\n    [  80,   81,   82,   83,   84,   85,   86,   87,   88,   89,   90,   91,   92,   93,   94,   95],\n    [  96,   97,   98,   99,  100,  101,  102,  103,  104,  105,  106,  107,  108,  109,  110,  111],\n    [ 112,  113,  114,  115,  116,  117,  118,  119,  120,  121,  122,  123,  124,  125,  126, 9633],\n    [8364, 9633, 8218, 9633, 8222, 8230, 8224, 8225, 9633, 8240,  352, 8249,  346,  356,  381,  377],\n    [9633, 8216, 8217, 8220, 8221, 8226, 8211, 8212, 9633, 8482,  353, 8250,  347,  357,  382,  378],\n    [  32,  711,  728,  321,  164,  260,  166,  167,  168,  169,  350,  171,  172,   32,  174,  379],\n    [ 176,  177,  731,  322,  180,  181,  182,  183,  184,  261,  351,  187,  317,  733,  318,  380],\n    [ 340,  193,  194,  258,  196,  313,  262,  199,  268,  201,  280,  203,  282,  205,  206,  270],\n    [ 272,  323,  327,  211,  212,  336,  214,  215,  344,  366,  218,  368,  220,  221,  354,  223],\n    [ 341,  225,  226,  259,  228,  314,  263,  231,  269,  233,  281,  235,  283,  237,  238,  271],\n    [ 273,  324,  328,  243,  244,  337,  246,  247,  345,  367,  250,  369,  252,  253,  355,  729]\n];\n\nexport const charsetOptions = [\n    { value: cp1252, label: 'cp1252' },\n    { value: cp1250, label: 'cp1250' }\n];\n","import React from 'react';\n\nimport CellSign from './CellSign';\n\nclass TestHeight extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.ref = React.createRef();\n    }\n\n    getHeight = () => {\n        return this.ref.current.clientHeight;\n    }\n\n    render() {\n        return (\n            <div style={ this.props.style}>\n                <CellSign\n                    sign={ \"A\" }\n                    width={ this.props.width }\n                    height={ 1 }\n                    fontFamily={ this.props.fontFamily }\n                    fontSize={ this.props.fontSize }\n                    fontWeight={ this.props.fontWeight }\n                    fontColor={ this.props.fontColor }\n                    antialiasing={ this.props.antialiasing }\n                    textStroke={ this.props.textStroke }\n                    textStrokeSize={ this.props.textStrokeSize }\n                    textStrokeColor={ this.props.textStrokeColor }\n                    strokeFill={ this.props.strokeFill }\n                    style={{ maxHeight: 1, minHeight: 1 }}\n                    cellRef={ this.ref }\n                />\n            </div>\n        );\n    }\n}\n\nexport default TestHeight;\n","import React from 'react';\n\nconst style = {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: 'center',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 10,\n    marginTop: 15\n};\n\nclass FlexContainer extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div style={{ ...style, ...this.props.style }}>\n                { this.props.children }\n            </div>\n        );\n    }\n}\n\nexport default FlexContainer;\n","import React from 'react';\n\nimport InputFile from '../components/InputFile';\nimport CircleAnimationButton from '../components/CircleAnimationButton-react/CircleAnimationButton';\nimport IconFA from '../components/CircleAnimationButton-react/IconFA';\nimport { faFileUpload, faFileImage, faFileCode, faBroom, faFolderPlus, faMagic, faTools, faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport TableWithSigns from '../components/TableWithSigns';\nimport { toPng } from 'html-to-image';\nimport Select from 'react-select';\nimport { charsetOptions } from '../data/consts';\nimport TestHeight from '../components/TestHeight';\nimport FlexContainer from '../components/FlexContainer';\n\nclass Main extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.ref = React.createRef();\n        this.testSignRef = React.createRef();\n\n        this.state = {\n            fontsList: {},\n            fontName: false,\n            fontSize: 11,\n            signWidth: 16,\n            signHeight: 16,\n            signHeightError: false,\n            fontWeight: 400,\n            charset: charsetOptions[0],\n            spaceWidth: 3,\n            fontImageName: \"new_font\",\n            fontImageNameChanged: false,\n            otfontFileName: \"new_font\",\n            otfontFileNameChanged: false,\n            fontColor: \"#FFFFFF\",\n            antialiasing: true,\n            textStroke: false,\n            textStrokeSize: 0.2,\n            textStrokeColor: \"#000000\",\n            strokeFill: false,\n\n            additionalOptions: false\n        }\n    }\n\n    componentDidMount() {\n        this.refreshFontList();\n    }\n\n    addFont = async (e) => {\n        let files = e.target.files;\n\n        if (files[0]) {\n            let fontName = \"ERROR\";\n\n            for (let i = 0; i < files.length; i++) {\n                if (files[i].name.substr(files[i].name.length - 4) === '.ttf') {\n                    const data = await files[i].arrayBuffer();\n                    fontName = files[i].name.replace(\".ttf\", \"\");\n\n                    // When a font with the same name is exists delete it, before add new\n                    if (this.state.fontsList[fontName]) {\n                        document.fonts.delete(this.state.fontsList[fontName]);\n                    }\n\n                    let font = new FontFace(fontName, data);\n                    await font.load();\n                    document.fonts.add(font);\n                }\n            }\n\n            this.setState({ fontName: fontName });\n\n            this.createFontName();\n\n            this.refreshFontList();\n        }\n\n        // Clear input file value to prevent block onChange event when select same elements\n        e.target.value = \"\";\n    }\n\n    refreshFontList = () => {\n        let fonts = {};\n\n        if (document.fonts.size > 0) {\n            document.fonts.forEach(function(value) {\n                fonts[value.family] = value;\n            });\n        }\n\n        this.setState({ fontsList: fonts });\n    }\n\n    getFontListOptions = (list) => {\n        let options = [];\n\n        for (let i in list) {\n            options.push({ value: i, label: i });\n        }\n\n        return options;\n    }\n\n    clearAllAddedFonts = () => {\n        document.fonts.clear();\n        this.refreshFontList();\n\n        this.setState({ fontName: false });\n\n        this.createFontName();\n    }\n\n    getMinSignHeight = () => {\n        return this.testSignRef.current.getHeight();\n    }\n\n    download = () => {\n        if (this.ref.current === null) {\n            return;\n        }\n\n        toPng(this.ref.current, { cacheBust: false, skipAutoScale: true, pixelRatio: 1, quality: 1.0 }).then((dataUrl) => {\n            const link = document.createElement('a');\n            link.download = this.state.fontImageName + \".png\";\n            link.href = dataUrl;\n            link.click();\n        }).catch((err) => {\n            console.log(err);\n        });\n    }\n\n    generateOtfontFile = () => {\n        let text = \"Font\"\n            + \"\\n  name: \" + this.state.otfontFileName\n            + \"\\n  texture: \" + this.state.fontImageName\n            + \"\\n  height: \" + this.getMinSignHeight()\n            + \"\\n  glyph-size: \" + this.state.signWidth + \" \" + this.state.signHeight\n            + \"\\n  space-width: \" + this.state.spaceWidth\n            + \"\\n\";\n\n        let a = document.createElement('a');\n        a.href = \"data:application/octet-stream;charset=utf-8;base64,\" + window.btoa(unescape(encodeURIComponent(text)));\n        a.textContent = 'download';\n        a.download = this.state.otfontFileName + \".otfont\";\n        a.click();\n    }\n\n    createFontName = () => {\n        // Delay action to wait for other setState changes, to get current data\n        setTimeout(() => {\n            let fontName = this.state.fontName ? this.state.fontName : \"new_font\";\n            let fontFileName = fontName + \"-\" + this.state.fontSize + \"px\" + \"_\" + this.state.charset.label;\n\n            if (this.state.fontImageNameChanged === true && this.state.otfontFileNameChanged === true) {\n                return;\n            } else if (this.state.fontImageNameChanged === false && this.state.otfontFileNameChanged === false) {\n                this.setState({ fontImageName: fontFileName, otfontFileName: fontFileName });\n            } else if (this.state.fontImageNameChanged === true && this.state.otfontFileNameChanged === false) {\n                this.setState({ otfontFileName: fontFileName });\n            } else if (this.state.fontImageNameChanged === false && this.state.otfontFileNameChanged === true) {\n                this.setState({ fontImageName: fontFileName });\n            }\n        }, 100);\n    }\n\n    resetFontImageNameChanged = () => {\n        this.setState({ fontImageNameChanged: false });\n\n        this.createFontName();\n    }\n\n    resetOtfontFileNameChanged = () => {\n        this.setState({ otfontFileNameChanged: false });\n\n        this.createFontName();\n    }\n\n    openAdditionalOptions = () => {\n        this.setState({ additionalOptions: true });\n    }\n\n    closeAdditionalOptions = () => {\n        this.setState({ additionalOptions: false });\n    }\n\n    // onChange\n\n    onChangeFont = (e) => {\n        this.setState({ fontName: e.value });\n\n        this.createFontName();\n    }\n\n    onChangeFontSize = (e) => {\n        this.setState({ fontSize: Number(e.target.value) });\n\n        this.createFontName();\n\n        // This action run before UI change, so data from getMinSignHeight is out of date, need to delay checking action\n        setTimeout(() => {\n            if (this.getMinSignHeight() <= this.state.signHeight) {\n                this.setState({ signHeightError: false });\n            } else {\n                this.setState({ signHeightError: true });\n            }\n        }, 100);\n    }\n\n    onChangeSignWidth = (e) => {\n        this.setState({ signWidth: Number(e.target.value) });\n    }\n\n    onChangeSignHeight = (e) => {\n        if (this.getMinSignHeight() <= Number(e.target.value)) {\n            this.setState({ signHeight: Number(e.target.value), signHeightError: false });\n        } else {\n            this.setState({ signHeight: Number(e.target.value), signHeightError: true });\n        }\n    }\n\n    onChangeFontWeight = (e) => {\n        this.setState({ fontWeight: Number(e.target.value) });\n    }\n\n    onChangeCharset = (e) => {\n        this.setState({ charset: e });\n\n        this.createFontName();\n    }\n\n    onChangeSpaceWidth = (e) => {\n        this.setState({ spaceWidth: Number(e.target.value) });\n    }\n\n    onChangeFontImageName = (e) => {\n        this.setState({ fontImageName: e.target.value, fontImageNameChanged: true });\n    }\n\n    onChangeOtfontFileName = (e) => {\n        this.setState({ otfontFileName: e.target.value, otfontFileNameChanged: true });\n    }\n\n    onChangeFontColor = (e) => {\n        this.setState({ fontColor: e.target.value });\n    }\n\n    onChangeAntialiasing = (e) => {\n        this.setState({ antialiasing: e.target.checked });\n    }\n\n    onChangeTextStroke = (e) => {\n        this.setState({ textStroke: e.target.checked });\n    }\n\n    onChangeTextStrokeSize = (e) => {\n        this.setState({ textStrokeSize: Number(e.target.value) });\n    }\n\n    onChangeTextStrokeColor = (e) => {\n        this.setState({ textStrokeColor: e.target.value });\n    }\n\n    onChangeStrokeFill = (e) => {\n        this.setState({ strokeFill: e.target.checked });\n    }\n\n    render() {\n        return (\n            <div>\n                <FlexContainer style={{ marginTop: 5 }}>\n                    <InputFile\n                        text={ \"Load font\" }\n                        accept={ \".ttf\" }\n                        multiple={ true }\n                        icon={ faFileUpload }\n                        onChange={ e => this.addFont(e) }\n                        width={ 120 }\n                    />\n                    <InputFile\n                        text={ \"Load font from folder\" }\n                        multiple={ true }\n                        directory={ true }\n                        icon={ faFolderPlus }\n                        onChange={ e => this.addFont(e) }\n                        width={ 210 }\n                    />\n                    <CircleAnimationButton\n                        icon={ <IconFA icon={ faBroom }/> }\n                        text={ \"Delete added fonts\" }\n                        width={ 190 }\n                        color=\"steelPurple\"\n                        onClick={ this.clearAllAddedFonts }\n                    />\n                </FlexContainer>\n\n                <FlexContainer>\n                    <div>Font:</div>\n                    <Select\n                        value={ this.state.fontName ? { value: this.state.fontName, label: this.state.fontName } : null }\n                        onChange={ this.onChangeFont }\n                        options={ this.getFontListOptions(this.state.fontsList) }\n                        styles={{\n                            container: (provided, state) => ({ ...provided, width: 300, height: 30 }),\n                            option: (provided, state) => ({ ...provided, color: '#000000' }),\n                            control: (provided, state) => ({ ...provided, minHeight: 20 }),\n                            indicatorsContainer: (provided, state) => ({ ...provided, height: 30 })\n                        }}\n                    />\n                </FlexContainer>\n\n                <FlexContainer>\n                    <div>\n                        Font size:\n                    </div>\n                    <input\n                        type=\"number\"\n                        style={{ width: 100 }}\n                        value={ this.state.fontSize }\n                        min={ 1 }\n                        onChange={ this.onChangeFontSize }\n                    />\n                </FlexContainer>\n\n                <FlexContainer>\n                    <div>\n                        Sign width:\n                    </div>\n                    <input\n                        type=\"number\"\n                        style={{ width: 100 }}\n                        value={ this.state.signWidth }\n                        min={ 1 }\n                        onChange={ this.onChangeSignWidth }\n                    />\n                </FlexContainer>\n\n                <FlexContainer>\n                    <div>\n                        Sign height:\n                    </div>\n                    <input\n                        type=\"number\"\n                        style={{\n                            width: 100,\n                            backgroundColor: this.state.signHeightError ? '#FF3366' : '#FFFFFF'\n                        }}\n                        value={ this.state.signHeight }\n                        min={ 1 }\n                        onChange={ this.onChangeSignHeight }\n                    />\n                </FlexContainer>\n                { this.state.signHeightError ? <div style={{ color: '#FF3366', marginTop: 5 }}>Real sign height is greater than the set height</div> : null }\n\n                <FlexContainer>\n                    <div>\n                        Font weight:\n                    </div>\n                    <input\n                        type=\"number\"\n                        style={{ width: 100 }}\n                        value={ this.state.fontWeight }\n                        step={ 100 }\n                        min={ 100 }\n                        max={ 900 }\n                        onChange={ this.onChangeFontWeight }\n                    />\n                </FlexContainer>\n\n                <FlexContainer>\n                    <div>\n                        Charset:\n                    </div>\n                    <Select\n                        value={ this.state.charset }\n                        onChange={ this.onChangeCharset }\n                        options={ charsetOptions }\n                        styles={{\n                            container: (provided, state) => ({ ...provided, width: 130, height: 30 }),\n                            option: (provided, state) => ({ ...provided, color: '#000000' }),\n                            control: (provided, state) => ({ ...provided, minHeight: 20 }),\n                            indicatorsContainer: (provided, state) => ({ ...provided, height: 30 })\n                        }}\n                    />\n                </FlexContainer>\n\n                <FlexContainer>\n                    <div>\n                        Space width:\n                    </div>\n                    <input\n                        type=\"number\"\n                        style={{ width: 100 }}\n                        value={ this.state.spaceWidth }\n                        min={ 1 }\n                        onChange={ this.onChangeSpaceWidth }\n                    />\n                </FlexContainer>\n\n                <FlexContainer>\n                    <div>\n                        Font image name:\n                    </div>\n                    <input\n                        type=\"text\"\n                        style={{\n                            width: 300,\n                            border: this.state.fontImageNameChanged ? \"3px solid #0099CC\" : null\n                        }}\n                        value={ this.state.fontImageName }\n                        onChange={ this.onChangeFontImageName }\n                    />\n                    <div>\n                        <CircleAnimationButton\n                            icon={ <IconFA icon={ faMagic }/> }\n                            height={ 30 }\n                            color={ \"deepSea\" }\n                            text={ \"Set automatically\" }\n                            width={ 170 }\n                            onClick={ this.resetFontImageNameChanged }\n                        />\n                    </div>\n                </FlexContainer>\n\n                <FlexContainer>\n                    <div>\n                        Otfont file name:\n                    </div>\n                    <input\n                        type=\"text\"\n                        style={{\n                            width: 300,\n                            border: this.state.otfontFileNameChanged ? \"3px solid #0099CC\" : null\n                        }}\n                        value={ this.state.otfontFileName }\n                        onChange={ this.onChangeOtfontFileName }\n                    />\n                    <div>\n                        <CircleAnimationButton\n                            icon={ <IconFA icon={ faMagic }/> }\n                            height={ 30 }\n                            color={ \"deepSea\" }\n                            text={ \"Set automatically\" }\n                            width={ 170 }\n                            onClick={ this.resetOtfontFileNameChanged }\n                        />\n                    </div>\n                </FlexContainer>\n\n                <br/>\n\n                <CircleAnimationButton\n                    icon={ <IconFA icon={ this.state.additionalOptions === false ? faTools : faTimesCircle }/> }\n                    alwaysVisibleText={ true }\n                    text={ this.state.additionalOptions === false ? \"Open options\" : \"Close options\" }\n                    width={ 150 }\n                    color={ this.state.additionalOptions === false ? \"coralBlue\" : \"gray\" }\n                    style={{ margin: \"auto\" }}\n                    onClick={ this.state.additionalOptions === false ? this.openAdditionalOptions : this.closeAdditionalOptions }\n                />\n\n                { this.state.additionalOptions === true ?\n                    <div>\n                        <FlexContainer>\n                            <div>\n                                Font color:\n                            </div>\n                            <input\n                                type=\"color\"\n                                style={{ width: 100 }}\n                                value={ this.state.fontColor }\n                                onChange={ this.onChangeFontColor }\n                            />\n                        </FlexContainer>\n                        <FlexContainer>\n                            <div>\n                                Antialiasing:\n                            </div>\n                            <input\n                                type=\"checkbox\"\n                                defaultChecked={ this.state.antialiasing }\n                                onChange={ this.onChangeAntialiasing }\n                            />\n                        </FlexContainer>\n                        <div style={{ fontSize: 14 }}>\n                            Experimental option, probably works only on Mac OS X/macOS, more info <a style={{ color: \"#CC0033\" }} href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/font-smooth\">link</a>.\n                        </div>\n\n                        <FlexContainer>\n                            <div>\n                                Text stroke:\n                            </div>\n                            <input\n                                type=\"checkbox\"\n                                defaultChecked={ this.state.textStroke }\n                                onChange={ this.onChangeTextStroke }\n                            />\n                        </FlexContainer>\n\n                        <FlexContainer>\n                            <div>\n                                Text stroke size:\n                            </div>\n                            <input\n                                type=\"number\"\n                                style={{ width: 100 }}\n                                value={ this.state.textStrokeSize }\n                                min={ 0 }\n                                step={ 0.1 }\n                                onChange={ this.onChangeTextStrokeSize }\n                            />\n                        </FlexContainer>\n\n                        <FlexContainer>\n                            <div>\n                                Text stroke color:\n                            </div>\n                            <input\n                                type=\"color\"\n                                style={{ width: 100 }}\n                                value={ this.state.textStrokeColor }\n                                onChange={ this.onChangeTextStrokeColor }\n                            />\n                        </FlexContainer>\n\n                        <FlexContainer>\n                            <div>\n                                Stroke fill:\n                            </div>\n                            <input\n                                type=\"checkbox\"\n                                defaultChecked={ this.state.strokeFill }\n                                onChange={ this.onChangeStrokeFill }\n                            />\n                        </FlexContainer>\n                    </div>\n                    :\n                    null\n                }\n\n                <div style={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'center', marginTop: 25 }}>\n                    <CircleAnimationButton\n                        icon={ <IconFA icon={ faFileImage }/> }\n                        text={ \"Download font image\" }\n                        width={ 200 }\n                        style={{ marginTop: 5, marginBottom: 5, marginRight: 5 }}\n                        onClick={ this.download }\n                    />\n                    <CircleAnimationButton\n                        icon={ <IconFA icon={ faFileCode }/> }\n                        text={ \"Download otfont file\" }\n                        width={ 200 }\n                        color=\"springForest\"\n                        style={{ marginTop: 5, marginBottom: 5, marginRight: 5 }}\n                        onClick={ this.generateOtfontFile }\n                    />\n                </div>\n\n                <br/>\n\n                <div style={{ width: 'fit-content', margin: 'auto' }}>\n                    <TableWithSigns\n                        fontFamily={ this.state.fontName }\n                        fontSize={ this.state.fontSize }\n                        signWidth={ this.state.signWidth }\n                        signHeight={ this.state.signHeight }\n                        fontWeight={ this.state.fontWeight }\n                        charset={ this.state.charset.value }\n                        fontColor={ this.state.fontColor }\n                        antialiasing={ this.state.antialiasing }\n                        textStroke={ this.state.textStroke }\n                        textStrokeSize={ this.state.textStrokeSize }\n                        textStrokeColor={ this.state.textStrokeColor }\n                        strokeFill={ this.state.strokeFill }\n                        divRef={ this.ref }\n                    />\n                </div>\n\n                <div style={{ marginTop: 10 }}>\n                    Trying to calculate the minimum sign height\n                </div>\n\n                <TestHeight\n                    fontFamily={ this.state.fontName }\n                    fontSize={ this.state.fontSize }\n                    signWidth={ this.state.signWidth }\n                    signHeight={ this.state.signHeight }\n                    fontWeight={ this.state.fontWeight }\n                    fontColor={ this.state.fontColor }\n                    antialiasing={ this.state.antialiasing }\n                    textStroke={ this.state.textStroke }\n                    textStrokeSize={ this.state.textStrokeSize }\n                    textStrokeColor={ this.state.textStrokeColor }\n                    strokeFill={ this.state.strokeFill }\n                    style={{ margin: 'auto', width: 'fit-content' }}\n                    ref={ this.testSignRef }\n                />\n            </div>\n        );\n    }\n}\n\nexport default Main;\n","import './App.css';\n\nimport Main from './views/Main';\n\nconst style = {\n  backgroundColor: \"#282c34\",\n  minHeight: \"100vh\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  color: \"white\"\n}\n\nfunction App() {\n  return (\n    <div className=\"App\" style={ style }>\n      <Main/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}